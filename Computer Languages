After stardardizing the concept of the base tech (pure) and shifting to upscaling, implementation, penetration and diversification (applied)

A stardard was set, defined by major bodies with power and user size, ECMA:
Everything you need to learn about standard computer langauge ECMA: https://tc39.es/ecma262/

----------
Basic

After the field of Information Technology landed on Ultra large-scale integration (ULSI) (is the process of integrating or embedding millions of transistors on a single silicon semiconductor microchip)
The Field has not developed after that. However, the number of transistors from 1 Transistors to Crafted with 54 billion transistors, the NVIDIA Ampere architecture is the largest 7 nanometer (nm) chip ever built and features six key groundbreaking innovations in 2024.

ULSI Remains the same, the number of Transistor kept on increasing (A transistor is a semiconductor device used to amplify or switch electrical signals and power)

ULSI, which stands for Ultra Large Scale Integration, is a technological process in the field of microelectronics that involves the integration of an exceptionally large number of transistors onto a single semiconductor chip.

--------------

OS

After the physical components of a computer are assembled, the next step is to install and configure the software. This process typically involves several steps:

Operating System Installation: The first step is to install the operating system (OS) onto the computer. This involves booting the computer from a bootable installation media (such as a DVD or USB drive) and following the prompts to install the OS onto the computer's storage device (e.g., hard drive or SSD). The OS manages the computer's hardware resources and provides a user interface for interacting with the system.

Device Drivers Installation: Once the operating system is installed, device drivers need to be installed for the various hardware components in the computer. Device drivers are software programs that allow the operating system to communicate with and control hardware devices such as the motherboard, graphics card, network adapter, and peripherals.

Software Updates and Patching: After the initial installation, it's essential to apply any available software updates and patches to ensure that the system is up-to-date and secure. This includes updates for the operating system, device drivers, and other software installed on the computer.

Software Installation: Depending on the intended use of the computer, additional software applications may need to be installed. This could include productivity software (e.g., office suites), multimedia software, development tools, antivirus software, and more. These applications can be installed from installation media or downloaded from the internet.

Configuration and Customization: Once the necessary software is installed, the system can be configured and customized to meet the user's preferences and requirements. This may involve setting up user accounts, configuring network settings, adjusting system settings, and personalizing the user interface.

Data Migration: If the user has data from a previous computer or backup, it may need to be migrated to the new computer. This could involve transferring files and settings, importing email accounts and messages, and migrating other data as needed.

Testing and Optimization: Finally, the system should be thoroughly tested to ensure that everything is functioning correctly. This includes testing hardware components, verifying software functionality, and performing any necessary optimizations or tuning to improve performance and stability.

By completing these steps, the computer is ready for use, tailored to the user's needs, and equipped with the necessary software to perform its intended tasks. Ongoing maintenance, updates, and monitoring will be required to keep the system running smoothly over time.

------------------
CLI 

What is Common Language Infrastructure?

Common Language Infrastructure, often simply referred to as CLI, forms an integral part of the .NET framework. It provides a platform-neutral environment, enabling the execution of programs written in various high-level languages. 
This innovative functionality makes it possible for these diverse languages to interoperate seamlessly within the .NET framework.

How does CLI work?
The magic of the Common Language Infrastructure lies in its ability to enable interoperability between different programming languages. When a source code is compiled using a .NET language, it is not converted into machine code. Instead, it is transformed into an intermediate language known as the Common Intermediate Language (CIL). This CIL code is then executed by the Virtual Execution System at runtime.

Advantages of CLI

Platform independence
One of the greatest advantages of the Common Language Infrastructure is its platform independence. The same CIL code can be executed on any device that has a compatible version of the .NET framework installed.

Language interoperability
CLI enables different programming languages to work together seamlessly. This means developers can choose the best language for a particular task without worrying about compatibility issues.

Enhanced performance
Applications built with CLI tend to have enhanced performance. The CIL code is compiled into machine code just before execution, ensuring optimal performance.

Robust security
The Common Language Infrastructure offers robust security features. It provides mechanisms for type safety, code access security, and role-based security.

Simplified development process
Finally, the Common Language Infrastructure simplifies the development process. It reduces the complexity of deploying and versioning components, making it easier for developers to manage their projects.
